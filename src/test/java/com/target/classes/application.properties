server.port=7770
server.servlet.context-path=/library
## Database Properties
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://13.233.140.75:3306/library?autoReconnect=true&useSSL=false
spring.datasource.username = inguser
spring.datasource.password = H@ckath0n
#useSSL=false&allowPublicKeyRetrieval=false Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
 #Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
sonar.host.url=http://localhost:9000

# = Keep the connection alive if idle for a long time (needed in production)

# ==============================================================

spring.datasource.testWhileIdle = true

spring.datasource.validationQuery = SELECT 1

# ==============================================================

# = Show or not log for each sql query

# ==============================================================

spring.jpa.show-sql = true



# ==============================================================

# = Spring Security / Queries for AuthenticationManagerBuilder

# ==============================================================

spring.queries.users-query=select email, password, active from user where email=?

spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?

# ==============================================================

# = Initialize the database using data.sql script

# ==============================================================

spring.datasource.initialization-mode=always
